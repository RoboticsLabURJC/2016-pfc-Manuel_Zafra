# -*- coding: utf-8 -*-


import math
import sys
import pickle
from PyQt4 import QtGui
from OpenGL.GL import *
from OpenGL.GLU import *
from PyQt4 import QtCore, QtGui



class VisorDrone(QtGui.QWidget):

    def __init__(self):
        super(VisorDrone, self).__init__()

        self.setWindowTitle('Drone Navigator')
        self.setMinimumSize(780,470)
        self.setMaximumSize(780,470)

        self.changeCam = QtGui.QPushButton("Change Camera")
        self.changeCam.setMinimumSize(250,40)
        self.changeCam.setMaximumSize(250,40)
        self.changeCam.setParent(self)
        self.changeCam.clicked.connect(self.changeCamera)

        self.posText = QtGui.QLabel(self)
        self.posText.setMinimumSize(250,100)
        self.posText.setMaximumSize(250,100)
        self.posText.show()

        self.imgLabel=QtGui.QLabel(self)
        self.imgLabel.setMinimumSize(250,250)
        self.imgLabel.setMaximumSize(250,250)
        self.imgLabel.show()
        self.connect(self, QtCore.SIGNAL("NewImg"), self.update_img)
        
        VLayout = QtGui.QVBoxLayout()
        VLayout.addStretch(1)
        VLayout.addWidget(self.imgLabel)
        VLayout.addStretch(1)
        VLayout.addWidget(self.changeCam)
        VLayout.addStretch(1)
        VLayout.addWidget(self.changeView)
        VLayout.addStretch(1)
        VLayout.addWidget(self.posText)
        VLayout.addStretch(1)

        HLayout = QtGui.QHBoxLayout()
        HLayout.addStretch(1)
        HLayout.addLayout(VLayout)
        HLayout.addStretch(1)
        HLayout.addStretch(1)

        self.setLayout(HLayout)

        #self.visor3d = Visor3D()
        

    def setInterface(self,interface):
        self.interface=interface

    def changeCamera(self):
        self.interface.toggleCam()

    def update(self):
        pose3d = self.interface.getPose3D()
        image = self.interface.getImage()
        if image != None:
            self.emit(QtCore.SIGNAL("NewImg"), image)
        self.posText.setText("Position: \n(%f, %f, %f)"
            %(pose3d.x, pose3d.y, pose3d.z))

    def update_img(self, image):
        img = QtGui.QImage(image.data, image.shape[1], image.shape[0], QtGui.QImage.Format_RGB888)
        #size=QtCore.QSize(image.shape[1],image.shape[0])
        #self.imgLabel.resize(size)
        self.imgLabel.setPixmap(QtGui.QPixmap.fromImage(img))


