import threading
import time
from datetime import datetime
import sys, traceback, Ice
import jderobot
import numpy as np

t_cycle = 600 # ms

try:
    ic = Ice.initialize(sys.argv)
    properties = ic.getProperties()

    #------- POSE3D ---------
    basepose3D = ic.propertyToProxy("Path.Pose3D.Proxy")
    self.pose3DProxy=jderobot.Pose3DPrx.checkedCast(basepose3D)
    if self.pose3DProxy:
        self.realpose=jderobot.Pose3DData()
    else:
        print 'Interface pose3D not connected'

except:
    traceback.print_exc()
exit()
    status = 1

while(self.pose3DProxy):

    start_time = datetime.now()
    self.update()
    end_time = datetime.now()

    dt = end_time - start_time
    dtms = ((dt.days * 24 * 60 * 60 + dt.seconds) * 1000 
        + dt.microseconds / 1000.0)
        
    if(dtms < t_cycle):
        time.sleep((t_cycle - dtms) / 1000.0);


def update(self):
    if self.pose3DProxy:
        pose=self.pose3DProxy.getPose3DData()
        pathfile = open('path.txt', a)
        pathfile.write('%f %f %f' %(pose.x pose.y pose.z))
        pathfile.close()

